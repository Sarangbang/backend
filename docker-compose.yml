services:
  db:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "9912:3306"
    profiles:
      - "dev"
    environment:
      MYSQL_ROOT_PASSWORD: ${DEV_DB_PASSWORD}
      MYSQL_DATABASE: sarangbang
    volumes:
      - sarangbang-data:/var/lib/mysql
    networks:
      - sarangbang-network

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - sarangbang-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8090:8081"  # 웹 UI 접근 포트
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      - mongo
    networks:
      - sarangbang-network
    restart: always

  # MinIO 파일 저장소 (S3 호환)
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "${MINIO_API_PORT:-9000}:9000"    # MinIO API 포트 (환경 변수로 관리 또는 기본값 9000)
      - "${MINIO_CONSOLE_PORT:-9001}:9001" # MinIO Console 포트 (환경 변수로 관리 또는 기본값 9001)
    profiles:
      - "dev"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}       # .env 파일 또는 기본값 minioadmin 사용
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin} # .env 파일 또는 기본값 minioadmin 사용
    volumes:
      # MinIO 데이터를 저장할 볼륨 (컨테이너 삭제해도 데이터 유지)
      - minio-data:/data
    networks:
      - sarangbang-network
    restart: always
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  mongo-data:
  sarangbang-data:
  minio-data:  # MinIO 데이터 저장용 볼륨

networks:
  sarangbang-network:
    driver: bridge
